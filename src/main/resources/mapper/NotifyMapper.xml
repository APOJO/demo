<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iotplatform.mapper.NotifyMapper" >
  <resultMap id="BaseResultMap" type="com.iotplatform.client.dto.Notify" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="notify_type" property="notifyType" jdbcType="VARCHAR" />
    <result column="device_id" property="deviceId" jdbcType="VARCHAR" />
    <result column="gateway_id" property="gatewayId" jdbcType="VARCHAR" />
    <result column="request_id" property="requestId" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, notify_type, device_id, gateway_id, request_id, update_time, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from notify
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from notify
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.iotplatform.client.dto.Notify" >
    insert into notify (id, notify_type, device_id, 
      gateway_id, request_id, update_time, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{notifyType,jdbcType=VARCHAR}, #{deviceId,jdbcType=VARCHAR}, 
      #{gatewayId,jdbcType=VARCHAR}, #{requestId,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.iotplatform.client.dto.Notify" >
    insert into notify
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="notifyType != null" >
        notify_type,
      </if>
      <if test="deviceId != null" >
        device_id,
      </if>
      <if test="gatewayId != null" >
        gateway_id,
      </if>
      <if test="requestId != null" >
        request_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="notifyType != null" >
        #{notifyType,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null" >
        #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="gatewayId != null" >
        #{gatewayId,jdbcType=VARCHAR},
      </if>
      <if test="requestId != null" >
        #{requestId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.iotplatform.client.dto.Notify" >
    update notify
    <set >
      <if test="notifyType != null" >
        notify_type = #{notifyType,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null" >
        device_id = #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="gatewayId != null" >
        gateway_id = #{gatewayId,jdbcType=VARCHAR},
      </if>
      <if test="requestId != null" >
        request_id = #{requestId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iotplatform.client.dto.Notify" >
    update notify
    set notify_type = #{notifyType,jdbcType=VARCHAR},
      device_id = #{deviceId,jdbcType=VARCHAR},
      gateway_id = #{gatewayId,jdbcType=VARCHAR},
      request_id = #{requestId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>